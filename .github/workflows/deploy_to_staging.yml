name: 'Reusable Deploy to Staging Workflow'

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      node_version:
        required: true
        type: string
      package_filter:
        required: false
        type: string
        description: 'pnpm filter for workspace projects (e.g., "frontend" or "@repo/api-server")'
      angular_caches:
        required: false
        type: boolean
        default: false
      turborepo_caches:
        required: false
        type: boolean
        default: false
      turborepo_app_name:
        required: false
        type: string
        description: 'Name of the Turborepo app'
      azure_app_name:
        required: false
        type: string
        description: 'Azure App Service or Function App name (if different from project_name)'

permissions:
  id-token: write
  contents: read

jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Restore Caches
        uses: harshithkashyap/github-actions-workflows/.github/actions/restore-caches@main
        with:
          project_name: ${{ inputs.project_name }}
          node_version: ${{ inputs.node_version }}
          angular_caches: ${{ inputs.angular_caches }}
          turborepo_caches: ${{ inputs.turborepo_caches }}

      - name: Prepare deployment
        run: |
          if [ -n "${{ inputs.package_filter }}" ]; then
            # Check if this is an Azure Functions app (has host.json)
            if pnpm --filter=${{ inputs.package_filter }} exec test -f host.json; then
              # Deploy Functions app with all dependencies resolved
              pnpm --filter=${{ inputs.package_filter }} deploy --prod deploy/
              
              (cd deploy/ && zip -rq ../bundle.zip .)
              
            else
              STANDALONE_DIR="apps/${{ inputs.turborepo_app_name }}/.next/standalone"              
              (cd "$STANDALONE_DIR" && zip -rq ../../../../bundle.zip .)
            fi
            
          else
            # Single repo project: Build and package normally
            pnpm run build
            
            # Remove dev dependencies and unused files
            pnpm prune --prod
            rm -rf \
              .git/ \
              .gitignore \
              .gitattributes \
              .editorconfig \
              package-lock.json \
              pnpm-lock.yaml
            
            # Create deployment archive
            zip -rq bundle.zip .
          fi
          
          echo "Bundle complete."
          ls -l -h bundle.zip

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure App Service / Function App (Staging)
        id: deploy-staging
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ inputs.azure_app_name || inputs.project_name }}
          slot-name: staging
          package: bundle.zip